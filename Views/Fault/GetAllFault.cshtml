@model Report_a_Fault.ViewModel.SearchFaultVM

@{
    ViewData["Title"] = "GetAllFault";
    Layout = "_AdminLayout";
}
@{
    var prevDisabled = !Model.ReportedFault.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.ReportedFault.HasNextPage ? "disabled" : "";
}
@for (var i = 0; i < 5; i++)
{
    <div></div>
    <br />
}
<div class="card-shadow">
    <h1 class="heading-tetiary">Reported Computer Faults</h1>
    <table class="cus-table">
        <div class="search-bar">
            <form class="search" method="post">
                <input class="search-input" asp-for="Search" placeholder="Search fault" />
                <button type="submit" asp-action="GetAllFault" asp-controller="Fault" asp-route-search="@Model.Search" class="btn-search"><ion-icon name="search-outline"></ion-icon></button>
            </form>
        </div>
        <thead>
            <tr>
                <th>
                    BUILDING
                </th>
                <th>
                    LAB
                </th>
                <th>
                    COMPUTER NUMBER
                </th>
                @if (User.IsInRole(SD.Role_Super_Admin) || User.IsInRole(SD.Role_Admin))
                {
                    <th>
                        REPORTED BY
                    </th>
                    <th>
                        ATTENDED BY
                    </th>
                }
               
               
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ReportedFault)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Computer.Lab.Building.BuildingName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Computer.Lab.LabNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Computer.ComputerNumber)
                    </td>
                    @if (User.IsInRole(SD.Role_Admin) || User.IsInRole(SD.Role_Super_Admin))
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.StudentEmail)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.InternEmail)
                        </td>
                    }
                   
                   
                    <td>
                        <div class="actions">
                            @if (User.IsInRole(SD.Role_Intern))
                            {
                                <a asp-action="UpdateComputerStatus" asp-controller="Fault" asp-route-id="@item.computerId">Edit</a>
                            }

                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                            @if (User.IsInRole(SD.Role_Admin) || User.IsInRole(SD.Role_Super_Admin))
                            {
                                <a asp-action="AssignJobToIntern" asp-route-id="@item.Id">Assign Intern</a>
                            }
                            

                        </div>
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pagination-bar">
        <div class="pagination-text">
            <p>Page @Model.ReportedFault.PageIndex of @Model.ReportedFault.TotalPages</p>
        </div>
        <div class="pagination-btn">

            @if (prevDisabled != "disabled")
            {
                <a asp-route-pageNumber="@(Model.ReportedFault.PageIndex - 1)" asp-action="Index"><ion-icon class="p-icon" name="chevron-back-outline"></ion-icon></a>
            }

            @if (nextDisabled != "disabled")
            {
                <a asp-route-pageNumber="@(Model.ReportedFault.PageIndex + 1)">   <ion-icon class="p-icon" name="chevron-forward-outline"></ion-icon></a>
            }


        </div>



    </div>
</div>

